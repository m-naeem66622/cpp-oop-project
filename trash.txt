// Get and show medical history (all)
int Patient::getAndShowMedicalHistory() const
{
    if (medicalHistory.size() == 0)
    {
        std::cout << centerString("No medical history found.") << std::endl;
        return 0;
    }

    // id, currentMedications, allergies, doctorAssigned, roomNumber, createdAt, lastUpdatedAt
    // Print the medical history in Tabular format
    std::cout << "+----+----------------------+----------------------+----------------------+------+------------+--------------+" << std::endl;
    std::cout << "| " << std::setw(2) << std::left << "ID" << " | " << std::setw(20) << std::left << "Current Medications" << " | " << std::setw(20) << std::left << "Allergies" << " | " << std::setw(20) << std::left << "Doctor Assigned" << " | " << std::setw(4) << std::left << "Room" << " | " << std::setw(10) << std::left << "Created At" << " | " << std::setw(12) << std::left << "Last Updated" << " |" << std::endl;
    std::cout << "+----+----------------------+----------------------+----------------------+------+------------+--------------+" << std::endl;
    std::cout << medicalHistory;
    return 1;
}

// Get and show medical history by id
int Patient::getAndShowMedicalHistoryById(int id) const
{
    for (const auto &history : medicalHistory)
    {
        if (history.id == id)
        {
            std::cout << history;
            return 1; // 1 if found
        }
    }
    std::cout << "Medical history not found." << std::endl;
    return 0; // 0 if not found
}

// Update medical history by id
void Patient::updateMedicalHistory(int id)
{
    bool found = getAndShowMedicalHistoryById(id);
    if (!found)
        return;

    std::cout << "CURRENT MEDICAL HISTORY" << std::endl;
    std::cout << medicalHistory[id - 1];
    std::cout << std::endl
              << "UPDATE MEDICAL HISTORY" << std::endl;
    medicalHistory[id - 1] = getMedicalHistoryFromUser();
}

// Remove medical history by id
void Patient::removeMedicalHistory(int id)
{
    bool found = getAndShowMedicalHistoryById(id);
    if (!found)
        return;

    medicalHistory.erase(medicalHistory.begin() + id - 1);
}
